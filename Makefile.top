our %PREREQ_PM;
BEGIN {
    %PREREQ_PM= (
        'ExtUtils::Depends' => '0.405',
        'Devel::CheckLib'   => '1.03',
    );

    # If the prereqs for this script are missing,
    # write out a Makefile that tells CPAN to install them
    my $use_prereqs_code= join('', map { "use $_ '$PREREQ_PM{$_}'; " } keys %PREREQ_PM).'1;';
    print $use_prereqs_code."\n";
    unless (eval $use_prereqs_code) {
       warn "$@\n";
       WriteMakefile(
             NAME         => 'Crypt::SecretBuffer',
             PREREQ_FATAL => 1,
             PREREQ_PM    => \%PREREQ_PM,
       );
       exit 1; # not reached
    }
}

my $dep= ExtUtils::Depends->new('Crypt::SecretBuffer');
my @incpath;
my @libpath;
my @have;

sub check_lib_fn {
   my ($macro, $fname, $header, $lib)= @_;
   if (check_lib(
      # Just take the address of it, to verify it gets linked
      function => qq{void (*fn)()= (void(*)()) $fname; return fn != NULL;},
      ($header? ( header => $header ) : ()),
      ($lib? ( lib => $lib ) : ()),
      incpath  => \@incpath,
      libpath  => \@libpath,
      debug => 1,
      analyze_binary => sub { warn "  $_\n" for @_; },
   )) {
      warn "Found $fname";
      push @have, $macro;
   } else {
      warn "Don't have $fname";
   }
}

if ($^O ne 'MSWin32') { # none available on windows, and check_lib giving false positives...
   check_lib_fn(LIBSSL => 'RAND_bytes', 'openssl/rand.h', 'ssl');
   check_lib_fn(GETRANDOM => 'getrandom', 'sys/random.h');
   check_lib_fn(EXPLICIT_BZERO => 'explicit_bzero', 'string.h');
   check_lib_fn(MINCORE => 'mincore', 'sys/mman.h');
   check_lib_fn(MEMMEM => 'memmem', 'string.h');
}

$dep->set_libs(join ' ', (map "-L$_", @libpath))
   if @libpath;
$dep->set_inc(join ' ', map "-I$_", @incpath)
   if @incpath;
$dep->install('SecretBuffer.h', 'SecretBufferManualLinkage.h');
$dep->add_xs('SecretBuffer.xs');
$dep->add_pm(map { my $n= $_; $n =~ s/^lib/\$(INST_LIB)/; $_ => $n } <lib/*/*.pm>, <lib/*/*/*.pm>);
$dep->add_typemaps('typemap');

sub MY::postamble {
   return <<LITERAL;

SecretBufferManualLinkage.h: SecretBuffer.h
\t\$(PERL) build-manual-linkage-header.pl < SecretBuffer.h > SecretBufferManualLinkage.h

SecretBuffer.c: SecretBufferManualLinkage.h

LITERAL
}
